"""
üöÄ –ö–û–ü–ò–†–£–ô–¢–ï –≠–¢–û –í GOOGLE COLAB
–ü—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è –ë–ï–ó numpy - –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
"""

# ==========================================
# üì± Sound Detector APK Builder
# –í–µ—Ä—Å–∏—è: –ë–ï–ó NUMPY (–¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Ç–µ—Å—Ç–∞)
# ==========================================

print("=" * 60)
print("üöÄ Sound Detector APK Builder")
print("–í–µ—Ä—Å–∏—è: Simple (–±–µ–∑ numpy/AI)")
print("=" * 60)

# –®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
print("\n[1/7] Installing build tools...")
get_ipython().system('pip install -q buildozer cython==0.29.33')
get_ipython().system('apt-get update -qq')
get_ipython().system('apt-get install -y -qq openjdk-17-jdk')
print("‚úÖ Build tools ready")

# –®–∞–≥ 2: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
print("\n[2/7] Cloning project...")
get_ipython().system('git clone https://github.com/tairmen/shahed-classifier.git')
get_ipython().run_line_magic('cd', 'shahed-classifier')
print("‚úÖ Project loaded")

# –®–∞–≥ 3: –£–¥–∞–ª–µ–Ω–∏–µ numpy –∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (CRITICAL FIX!)
print("\n[3/7] üîß FIXING: Removing numpy (causes compilation errors)...")
import re

with open('buildozer.spec', 'r', encoding='utf-8') as f:
    spec = f.read()

# –£–±–∏—Ä–∞–µ–º numpy - –æ–Ω —Ç—Ä–µ–±—É–µ—Ç –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
spec = re.sub(
    r'requirements = .*',
    'requirements = python3,kivy,android,pyjnius',
    spec
)

with open('buildozer.spec', 'w', encoding='utf-8') as f:
    f.write(spec)

print("‚úÖ Fixed! requirements = python3,kivy,android,pyjnius")
print("   (numpy removed - will work without AI for now)")

# –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
print("\n[4/7] Checking files...")
import os
get_ipython().system('ls -lh buildozer.spec android_sound_detector.py')
print("‚úÖ Files present")

# –®–∞–≥ 5: –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
print("\n[5/7] Cleaning cache...")
get_ipython().system('buildozer android clean')
print("‚úÖ Cache cleared")

# –®–∞–≥ 6: –°–±–æ—Ä–∫–∞ APK
print("\n[6/7] Building APK...")
print("‚è∞ This will take 20-30 minutes")
print("‚òï Perfect time for coffee!")
print("=" * 60)

get_ipython().system('buildozer -v android debug')

print("\n" + "=" * 60)
print("‚úÖ Build completed!")
print("=" * 60)

# –®–∞–≥ 7: –°–∫–∞—á–∏–≤–∞–Ω–∏–µ APK
print("\n[7/7] Downloading APK...")

from google.colab import files
import os

try:
    if os.path.exists('bin'):
        apk_files = [f for f in os.listdir('bin') if f.endswith('.apk')]
        
        if apk_files:
            apk_path = f'bin/{apk_files[0]}'
            size_mb = os.path.getsize(apk_path) / (1024*1024)
            
            print("\n" + "=" * 60)
            print("üéâ SUCCESS!")
            print("=" * 60)
            print(f"üì± File: {apk_files[0]}")
            print(f"üì¶ Size: {size_mb:.1f} MB")
            print(f"üìù Note: This version works WITHOUT AI (no numpy)")
            print(f"         UI and basic features work fine!")
            print("\n‚¨áÔ∏è  Downloading...")
            
            files.download(apk_path)
            
            print("\n‚úÖ APK downloaded successfully!")
            print("\nüìã Installation steps:")
            print("1. Transfer APK to your Android device")
            print("2. Enable 'Unknown Sources' in Settings")
            print("3. Install the APK")
            print("4. Grant microphone permission")
            print("5. Press START to begin detection")
            print("\n‚ö†Ô∏è  Note: AI model won't load (no numpy)")
            print("          But UI and basic sound detection works!")
            
        else:
            print("‚ùå ERROR: No APK files found in bin/")
            print("\nüìÅ Contents of bin/:")
            get_ipython().system('ls -la bin/')
            print("\n‚ö†Ô∏è  Check build logs above for errors")
    else:
        print("‚ùå ERROR: bin/ directory not found!")
        print("Build failed. Check the logs above.")
        print("\nüìÅ Current directory contents:")
        get_ipython().system('ls -la')
        
except Exception as e:
    print(f"‚ùå ERROR: {e}")
    print("\nüîç Checking if APK exists...")
    if os.path.exists('bin'):
        get_ipython().system('ls -la bin/')

print("\n" + "=" * 60)
print("Process complete!")
print("=" * 60)
